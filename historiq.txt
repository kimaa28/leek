  179  git show
  180  git commit 
  181  git commit --allow-empty
  182  git commit --allow-empty
  183  cd .git/
  184  ls 
  185  ls -la
  186  rm COMMIT_EDITMSG 
  187  cd ..
  188  git commit --allow-empty
  189  git tad -list
  190  git tag -list
  191  git tag --list
  192  git tag 
  193  nano 
  194  git stash -u
  195  git add con.txt 
  196  git stash -m "con text"
  197  nano con.txt 
  198  git stash -m "con text"
  199  git stash -m -a -u "con text"
  200  git stash push -m "con text"
  201  git stash push -m -u "con text"
  202  git stash push -m "text"
  203  ls
  204  git status 
  205  git add con.txt 
  206  ls
  207  ls -la
  208  chmod 700 con.txt 
  209  git add con.txt 
  210  git status 
  211  git add .
  212  nano con.txt
  213  echo > "je suis un con" je.txt
  214  ls
  215  rm je\ suis\ un\ con 
  216  ls
  217  echo >> "je suis un con" je.txt
  218  ls
  219  echo "je suis un gros con" > je.txt && git add . && git stash push -m " je m'en bas les yecouil"
  220  ls
  221  rm con.txt 
  222  echo "je suis un gros con" > je.txt && git add . && git stash push -m " je m'en bas les yecouil"
  223  git stash --list
  224  git stash -list
  225  git stash list
  226  git stash show 
  227  git stash
  228  git stash show -p
  229  git show
  230  git stash list
  231  git stash apply stash@{0}
  232  git status
  233  git commit -a --amend --no-edit 
  234  git show
  235  git stash drop stash@{1}
  236  git stash list
  237  history 
  238  git log --stat
  239  git tag --stat
  240  git shoh -p
  241  git show -p
  242  git show learn
  243  git tag -a --amend --no-edit 
  244  git tag -a --amend --no-edit
  245  git tag learn -m " i dont no what to write in this space"
  246  git tag -f learn -m " i dont no what to write in this space"
  247  git show learn
  248  git diff
  249  git diff --staged
  250  git log
  251  git log --author="kimaa"
  252  exit
  253  history 
  254  cd git_learning/
  255  ls -la
  256  rm je suis un con
  257  nano je
  258  nano je.txt 
  259  echo -e "mais je m'en bas les couilles de votre avis alles ist mir egal" >> je.txt && git stash push --amend --no-edit 
  260  echo -e "mais je m'en bas les couilles de votre avis alles ist mir egal" >> je.txt && git stash push -u -m "je ssuis un gros con mais je l'acepete" 
  261  git stash list
  262  git stash show stash@{0}
  263  git stash show stash@{0} -p
  264  git log --graph 
  265  echo "hello world"
  266  echo "hello world"*3
  267  echo "hello world" x 3
  268  git show
  269  git stash apply stash@{0}
  270  git status
  271  git commit -a --amend --no-edit 
  272  ls -la
  273  git status 
  274  git stash push -u -m 
  275  git stash push -u 
  276  git stash list
  277  git stash apply stash@{0}
  278  git commit -a 
  279  ls -la
  280  cd .git/
  281  ls -la
  282  rm .COMMIT_EDITMSG.swp 
  283  cd ..
  284  git commit -a 
  285  git diff 
  286  git diff --staged
  287  history 
  288  git tag 
  289  cd git_learning/
  290  git tag
  291  git show-branch 
  292  git remote set-branches main
  293  git show firs
  294  git show firs --stat
  295  git show learn --stat
  296  py 
  297  py http.server 8000 --cgi
  298  python3 http.server 8000 --cgi
  299  git help
  300  branch 
  301  git branch 
  302  git branch learn 
  303  git branch 
  304  git log --graph 
  305  git show learn
  306  git help --all
  307  git show -h
  308  git help -g
  309  git branch learn -d
  310  git branch test-py
  311  git branch list
  312  git branch --list
  313  git branch list -d
  314  git checkout test-py
  315  git checkout test-py
  316  git branch
  317  nano files.py 
  318  git stash push -a -m "nicht zu sagen test branch"
  319  git stash list
  320  git config --list
  321  git stash apply stash@{0}
  322  git commit -a --amend --no-edit 
  323  git checkout master 
  324  git log 
  325  git log --graph
  326  git checkout test-py 
  327  git log 
  328  git show
  329  git log --stat
  330  git log --since="1 hours"
  331  git log --since="20 min ago"
  332  git log --since="200 min ago"
  333  git log --since="20000 min ago"
  334  git log --since="2 days ago"
  335  git log --graph 
  336  git status
  337  nano jes.txt 
  338  git checkout master
  339  git status 
  340  git commit --amend -a
  341  git status
  342  git add jes.txt 
  343  git commit --amend --no-edit 
  344  git status
  345  git checkout test-py 
  346  git status 
  347  nano html.html
  348  ls
  349  nano je.txt 
  350  ls -la
  351  git checkout master 
  352  ls
  353  ls -la
  354  git status
  355  git checkout test-py 
  356  ls -la
  357  ls -la
  358  git checkout master 
  359  git branch hello
  360  git branch
  361  git checkout hello 
  362  ls -la
  363  nano je.txt 
  364  git status 
  365  git commit -a --amend --no-edit
  366  git log --stat
  367  git config --local user.name "jordan"
  368  git config --list
  369  nano je.txt 
  370  git commit -a --amend --no-edit 
  371  git log --author
  372  git log --author="jordan"
  373  git log 
  374  nano je.txt 
  375  git commit -m -a "any"
  376  git commit -a -m "any"
  377  git log
  378  git checkout master
  379  git log 
  380  nano je.txt 
  381  git config --list
  382  git commit -am "any"
  383  git log
  384  git config -h
  385  git status 
  386  git checkout firs
  387  ls -la
  388  git checkout hello 
  389  git tag hello-tag -m "just a tag test for hello"
  390  git tag
  391  git show hello-tag 
  392  git checkout hello-tag 
  393  git checkout master
  394  git branch 
  395  git branch -d test-py 
  396  git branch -m test-py any
  397  git branch 
  398  git merge -h
  399  nano je.txt 
  400  git branch
  401  git show any
  402  git stash push -m "merge master and any"
  403  git stash list
  404  git merge any
  405  git merge hello
  406  git switch hello
  407  git log
  408  git status
  409  git merge master
  410  git branch master2.0
  411  git switch master2.0 
  412  nano je.txt 
  413  git commit -a --amend --no-edit 
  414  git switch hello 
  415  git merge master2.0
  416  nano je.txt 
  417  git merge master2.0
  418  git status
  419  git commit -a --amend -no-edit
  420  git commit -a --amend --no-edit
  421  git commit -am "je suis un putin de con"
  422  git status
  423  git merge master2.0
  424  nano je.txt 
  425  git log
  426  git log --oneline 
  427  git switch master2.0
  428  git merge hello
  429  nano je.txt 
  430  git commit -a --amend --no-edit 
  431  git switch hello
  432  git merge master2.0
  433  nano je.txt
  434  nano je.txt
  435  nano jes.txt 
  436  git switch master
  437  nano jes
  438  nano jes.txt 
  439  git merge master2.0
  440  git switch master2.0
  441  git merge master2.0
  442  git status 
  443  git commit -a --amend --no-edit 
  444  git commit -am "any commit" 
  445  nano jes.txt 
  446  nano je.txt 
  447  git switch master2.0
  448  nano jes.txt 
  449  git merge hello
  450  git log --stat
  451  nano jes.txt 
  452  git switch master
  453  git status 
  454  git merge hello
  455  git log 
  456  git show hello
  457  git merge master2.0 
  458  git merge master2.0 --allow-unrelated-histories 
  459  nano je.txt 
  460  git status
  461  git add -
  462  git add .
  463  git rm --cached .
  464  git rm -r --cached .
  465  git status 
  466  nano je.txt 
  467  git diff
  468  git diff --staged 
  469  git show
  470  git log 
  471  git commit -am "some change"
  472  git status 
  473  ls
  474  git log --oneline 
  475  git add .
  476  git restore --staged je.txt
  477  git status 
  478  git clone https://github/.com/kimaa/PROJEKT.git
  479  git clone https://github.com/kimaa/PROJEKT.git
  480  git clone https://github.com/kimaa28/PROJEKT.git
  481  ls
  482  cd PROJEKT/
  483  ls
  484  git roemote -v
  485  git remote -v
  486  cd GUI/
  487  nano LINUX_class.py 
  488  git push --set-upstream origin master
  489  ls
  490  git status 
  491  git add .
  492  git push --set-upstream origin master
  493  git commit -a --amend --no-edit 
  494  git push --set-upstream origin master
  495  git pull --rebase origin 
  496  git push --set-upstream origin master
  497  cd ../..
  498  git remote -v
  499  exit
  500  cd git_learning/
  501  git branch 
  502  nano je.txt 
  503  git switch hello 
  504  git branch master2
  505  git switch master2
  506  nano je.txt 
  507  git branch -D master2
  508  cd master
  509  git branch -D master2
  510  git switch master
  511  git branch -D master2
  512  nano je.txt 
  513  touch .gitignore
  514  nano .gitignore 
  515  git remote add origin git@github.com:kimaa28/jordan.git
  516  git remote -v
  517  cd PROJEKT/
  518  git remote -v
  519  cd ..
  520  git remote -v
  521  git push --set-upstream origin master
  522  git log
  523  git remote -v
  524  git push --set-upstream origin/master master
  525  git push --set-upstream origin master
  526  git pull --rebase 
  527  git commit -a --amend --no-edit 
  528  git pull --rebase 
  529  ls -la ~/.ssh
  530  [200~ssh-keygen -t ed25519 -C "deine.email@example.com"
  531  ssh-keygen -t ed25519 -C "kitiojordan@gmail.com"
  532  eval "$(ssh-agent -s)"
  533  ssh-add ~/.ssh/id_ed25519
  534  eval "$(ssh-agent -s)"
  535  ssh-add ~/.ssh/id_ed25519
  536  ssh-add ~/.ssh/id_rsa
  537  cat ~/.ssh/id_ed25519.pub
  538  ssh -T git@github.com
  539  ssh-keygen -t ed25519 -C "kitiojordan@gmail.com"
  540  ssh-keygen -t ed25519 -C "kitiojordan@gmail.com"
  541  cat ~/.ssh/id_ed25519.pub
  542  ssh-add ~/.ssh/id_rsa
  543  ssh-add ~/.ssh/id_ed25519
  544  ls -al ~/.ssh
  545  git remote add origin https://github.com/kimaa28/jordan.git
  546  ssh -keygen -t rsa -b 4096 -C "kitiojordan28@gmail.com"
  547  ssh-keygen -t rsa -b 4096 -C "kitiojordan28@gmail.com"
  548  ssh-add ~/.ssh/id_rsa
  549  cd ..
  550  cd .ssh/
  551  ls -la
  552  cd ..
  553  cd git_learning/
  554  cd ..
  555  ssh-keygen -t rsa -b 4096 -C "kitiojordan28@gmail.com"
  556  ssh-add ~/.ssh/id_rsa
  557  cd git_learning/
  558  git clone git@github.com/kimaa/jordan.git
  559  git clone git@github.com:kimaa28/jordan.git
  560  git remote -v
  561  git push --set-upstream origin master
  562  git status
  563  git remote set-url origin https://github.com/kimaa28/jordan.git
  564  git push --set-upstream origin master
  565  git pull 
  566  ls
  567  git push 
  568  git pull --rebase origin master
  569  git pull --rebase origin 
  570  git pull master master
  571  git pull origin/master master
  572  git pull origin master
  573  ls
  574  git push --set-upstream origin master
  575  ls
  576  git status 
  577  git git push -h
  578  git git push -g
  579  git git push --help
  580  git push --help
  581  git push --set-upstream origin master
  582  git pull --rebase
  583  git pull --rebase origin master
  584  git status 
  585  git push --set-upstream origin master
  586  git commit -a --amend --no-edit
  587  git status
  588  git add .
  589  git status 
  590  git commit -am "test jordan"
  591  git push --set-upstream origin master
  592  git pull origin master
  593  git pull origin master
  594  git push --set-upstream origin master
  595  git pull --rebase origin master
  596  git push origin master
  597  git branch
  598  git switch master
  599  git rebase --quit
  600  git branch
  601  git switch master
  602  git switch master
  603  git branch
  604  git status
  605  ls
  606  git remote -v
  607  git push --set-upstream origin master
  608  git pull origin master
  609  ls
  610  git pull --rebaese origin master
  611  git pull --rebase origin master
  612  ls
  613  git status 
  614  git add .
  615  git status
  616  git pull --rebase origin master
  617  git commit -a --amend --no-edit
  618  git pull --rebase origin master
  619   rm -fr ".git/rebase-merge"
  620  ls
  621  git pull --rebase origin master
  622  ls
  623  git push --set-upstream origin master
  624  git remote set-url https://github.com/kimaa28/Learn_code.git
  625  git remote set-url origin https://github.com/kimaa28/Learn_code.giteeeee
  626  git remote set-url origin https://github.com/kimaa28/Learn_code.git
  627  git pull origin master
  628  git push --set-upstream origin master
  629  git remote set-url origin https://github.com/kimaa28/leek.git
  630  git branch
  631  git branch master
  632  git checkout master
  633  git remote set-url origin https://github.com/kimaa28/leek.git
  634  git status
  635  git push --set-upstream origin master
  636  git switch hello 
  637  git push --set-upstream origin hello
  638  git config --lust
  639  git config --list
  640  ls
  641  git status 
  642  ls -la
  643  git switch master
  644  ls -la
  645  ls -la
  646  cd .git/
  647  ls
  648  cd FETCH_HEAD 
  649  nano FETCH_HEAD 
  650  git tag
  651  git push origin learn
  652  git push -h
  653  cd ..
  654  git push origin master
  655  git checkout firs
  656  ls
  657  git switch learn
  658  git switch any
  659  git switch hello
  660  git log
  661  git checkout -h
  662  git log --oneline 
  663  git checkout hello -- becf35f
  664  git checkout hello -- je.txt
  665  ls
  666  nano je.txt
  667  git checkout hello -- je.txt -- becf35f
  668  git stash list
  669  git branch -a
  670  git branch 
  671  git branch -a
  672  git branch -r
  673  git push --set-upstream origin hello
  674  git push origin --delete hello 
  675  git push --set-upstream origin hello
  676  git --help
  677  git show FETCH_HEAD 
  678  history > histry.txt
   12  nano files.py 
   13  git stash push -a -m "nicht zu sagen test branch"
   14  git stash list
   15  git config --list
   16  git stash apply stash@{0}
   17  git commit -a --amend --no-edit 
   18  git checkout master 
   19  git log 
   20  git log --graph
   21  git checkout test-py 
   22  git log 
   23  git show
   24  git log --stat
   25  git log --since="1 hours"
   26  git log --since="20 min ago"
   27  git log --since="200 min ago"
   28  git log --since="20000 min ago"
   29  git log --since="2 days ago"
   30  git log --graph 
   31  git status
   32  nano jes.txt 
   33  git checkout master
   34  git status 
   35  git commit --amend -a
   36  git status
   37  git add jes.txt 
   38  git commit --amend --no-edit 
   39  git status
   40  git checkout test-py 
   41  git status 
   42  nano html.html
   43  ls
   44  nano je.txt 
   45  ls -la
   46  git checkout master 
   47  ls
   48  ls -la
   49  git status
   50  git checkout test-py 
   51  ls -la
   52  ls -la
   53  git checkout master 
   54  git branch hello
   55  git branch
   56  git checkout hello 
   57  ls -la
   58  nano je.txt 
   59  git status 
   60  git commit -a --amend --no-edit
   61  git log --stat
   62  git config --local user.name "jordan"
   63  git config --list
   64  nano je.txt 
   65  git commit -a --amend --no-edit 
   66  git log --author
   67  git log --author="jordan"
   68  git log 
   69  nano je.txt 
   70  git commit -m -a "any"
   71  git commit -a -m "any"
   72  git log
   73  git checkout master
   74  git log 
   75  nano je.txt 
   76  git config --list
   77  git commit -am "any"
   78  git log
   79  git config -h
   80  git status 
   81  git checkout firs
   82  ls -la
   83  git checkout hello 
   84  git tag hello-tag -m "just a tag test for hello"
   85  git tag
   86  git show hello-tag 
   87  git checkout hello-tag 
   88  git checkout master
   89  git branch 
   90  git branch -d test-py 
   91  git branch -m test-py any
   92  git branch 
   93  git merge -h
   94  nano je.txt 
   95  git branch
   96  git show any
   97  git stash push -m "merge master and any"
   98  git stash list
   99  git merge any
  100  git merge hello
  101  git switch hello
  102  git log
  103  git status
  104  git merge master
  105  git branch master2.0
  106  git switch master2.0 
  107  nano je.txt 
  108  git commit -a --amend --no-edit 
  109  git switch hello 
  110  git merge master2.0
  111  nano je.txt 
  112  git merge master2.0
  113  git status
  114  git commit -a --amend -no-edit
  115  git commit -a --amend --no-edit
  116  git commit -am "je suis un putin de con"
  117  git status
  118  git merge master2.0
  119  nano je.txt 
  120  git log
  121  git log --oneline 
  122  git switch master2.0
  123  git merge hello
  124  nano je.txt 
  125  git commit -a --amend --no-edit 
  126  git switch hello
  127  git merge master2.0
  128  nano je.txt
  129  nano je.txt
  130  nano jes.txt 
  131  git switch master
  132  nano jes
  133  nano jes.txt 
  134  git merge master2.0
  135  git switch master2.0
  136  git merge master2.0
  137  git status 
  138  git commit -a --amend --no-edit 
  139  git commit -am "any commit" 
  140  nano jes.txt 
  141  nano je.txt 
  142  git switch master2.0
  143  nano jes.txt 
  144  git merge hello
  145  git log --stat
  146  nano jes.txt 
  147  git switch master
  148  git status 
  149  git merge hello
  150  git log 
  151  git show hello
  152  git merge master2.0 
  153  git merge master2.0 --allow-unrelated-histories 
  154  nano je.txt 
  155  git status
  156  git add -
  157  git add .
  158  git rm --cached .
  159  git rm -r --cached .
  160  git status 
  161  nano je.txt 
  162  git diff
  163  git diff --staged 
  164  git show
  165  git log 
  166  git commit -am "some change"
  167  git status 
  168  ls
  169  git log --oneline 
  170  git add .
  171  git restore --staged je.txt
  172  git status 
  173  git clone https://github/.com/kimaa/PROJEKT.git
  174  git clone https://github.com/kimaa/PROJEKT.git
  175  git clone https://github.com/kimaa28/PROJEKT.git
  176  ls
  177  cd PROJEKT/
  178  ls
  179  git roemote -v
  180  git remote -v
  181  cd GUI/
  182  nano LINUX_class.py 
  183  git push --set-upstream origin master
  184  ls
  185  git status 
  186  git add .
  187  git push --set-upstream origin master
  188  git commit -a --amend --no-edit 
  189  git push --set-upstream origin master
  190  git pull --rebase origin 
  191  git push --set-upstream origin master
  192  cd ../..
  193  git remote -v
  194  exit
  195  cd git_learning/
  196  git branch 
  197  nano je.txt 
  198  git switch hello 
  199  git branch master2
  200  git switch master2
  201  nano je.txt 
  202  git branch -D master2
  203  cd master
  204  git branch -D master2
  205  git switch master
  206  git branch -D master2
  207  nano je.txt 
  208  touch .gitignore
  209  nano .gitignore 
  210  git remote add origin git@github.com:kimaa28/jordan.git
  211  git remote -v
  212  cd PROJEKT/
  213  git remote -v
  214  cd ..
  215  git remote -v
  216  git push --set-upstream origin master
  217  git log
  218  git remote -v
  219  git push --set-upstream origin/master master
  220  git push --set-upstream origin master
  221  git pull --rebase 
  222  git commit -a --amend --no-edit 
  223  git pull --rebase 
  224  ls -la ~/.ssh
  225  [200~ssh-keygen -t ed25519 -C "deine.email@example.com"
  226  ssh-keygen -t ed25519 -C "kitiojordan@gmail.com"
  227  eval "$(ssh-agent -s)"
  228  ssh-add ~/.ssh/id_ed25519
  229  eval "$(ssh-agent -s)"
  230  ssh-add ~/.ssh/id_ed25519
  231  ssh-add ~/.ssh/id_rsa
  232  cat ~/.ssh/id_ed25519.pub
  233  ssh -T git@github.com
  234  ssh-keygen -t ed25519 -C "kitiojordan@gmail.com"
  235  ssh-keygen -t ed25519 -C "kitiojordan@gmail.com"
  236  cat ~/.ssh/id_ed25519.pub
  237  ssh-add ~/.ssh/id_rsa
  238  ssh-add ~/.ssh/id_ed25519
  239  ls -al ~/.ssh
  240  git remote add origin https://github.com/kimaa28/jordan.git
  241  ssh -keygen -t rsa -b 4096 -C "kitiojordan28@gmail.com"
  242  ssh-keygen -t rsa -b 4096 -C "kitiojordan28@gmail.com"
  243  ssh-add ~/.ssh/id_rsa
  244  cd ..
  245  cd .ssh/
  246  ls -la
  247  cd ..
  248  cd git_learning/
  249  cd ..
  250  ssh-keygen -t rsa -b 4096 -C "kitiojordan28@gmail.com"
  251  ssh-add ~/.ssh/id_rsa
  252  cd git_learning/
  253  git clone git@github.com/kimaa/jordan.git
  254  git clone git@github.com:kimaa28/jordan.git
  255  git remote -v
  256  git push --set-upstream origin master
  257  git status
  258  git remote set-url origin https://github.com/kimaa28/jordan.git
  259  git push --set-upstream origin master
  260  git pull 
  261  ls
  262  git push 
  263  git pull --rebase origin master
  264  git pull --rebase origin 
  265  git pull master master
  266  git pull origin/master master
  267  git pull origin master
  268  ls
  269  git push --set-upstream origin master
  270  ls
  271  git status 
  272  git git push -h
  273  git git push -g
  274  git git push --help
  275  git push --help
  276  git push --set-upstream origin master
  277  git pull --rebase
  278  git pull --rebase origin master
  279  git status 
  280  git push --set-upstream origin master
  281  git commit -a --amend --no-edit
  282  git status
  283  git add .
  284  git status 
  285  git commit -am "test jordan"
  286  git push --set-upstream origin master
  287  git pull origin master
  288  git pull origin master
  289  git push --set-upstream origin master
  290  git pull --rebase origin master
  291  git push origin master
  292  git branch
  293  git switch master
  294  git rebase --quit
  295  git branch
  296  git switch master
  297  git switch master
  298  git branch
  299  git status
  300  ls
  301  git remote -v
  302  git push --set-upstream origin master
  303  git pull origin master
  304  ls
  305  git pull --rebaese origin master
  306  git pull --rebase origin master
  307  ls
  308  git status 
  309  git add .
  310  git status
  311  git pull --rebase origin master
  312  git commit -a --amend --no-edit
  313  git pull --rebase origin master
  314   rm -fr ".git/rebase-merge"
  315  ls
  316  git pull --rebase origin master
  317  ls
  318  git push --set-upstream origin master
  319  git remote set-url https://github.com/kimaa28/Learn_code.git
  320  git remote set-url origin https://github.com/kimaa28/Learn_code.giteeeee
  321  git remote set-url origin https://github.com/kimaa28/Learn_code.git
  322  git pull origin master
  323  git push --set-upstream origin master
  324  git remote set-url origin https://github.com/kimaa28/leek.git
  325  git branch
  326  git branch master
  327  git checkout master
  328  git remote set-url origin https://github.com/kimaa28/leek.git
  329  git status
  330  git push --set-upstream origin master
  331  git switch hello 
  332  git push --set-upstream origin hello
  333  git config --lust
  334  git config --list
  335  ls
  336  git status 
  337  ls -la
  338  git switch master
  339  ls -la
  340  ls -la
  341  cd .git/
  342  ls
  343  cd FETCH_HEAD 
  344  nano FETCH_HEAD 
  345  git tag
  346  git push origin learn
  347  git push -h
  348  cd ..
  349  git push origin master
  350  git checkout firs
  351  ls
  352  git switch learn
  353  git switch any
  354  git switch hello
  355  git log
  356  git checkout -h
  357  git log --oneline 
  358  git checkout hello -- becf35f
  359  git checkout hello -- je.txt
  360  ls
  361  nano je.txt
  362  git checkout hello -- je.txt -- becf35f
  363  git stash list
  364  git branch -a
  365  git branch 
  366  git branch -a
  367  git branch -r
  368  git push --set-upstream origin hello
  369  git push origin --delete hello 
  370  git push --set-upstream origin hello
  371  git --help
  372  git show FETCH_HEAD 
  373  history > histry.txt
  374  git status
  375  touch -gitignore
  376  touch .gitignore
  377  nano .gitignore 
  378  ls
  379  ls -la
  380  git add .
  381  ls -al
  382  git rm --cached PROJEKT/
  383  git rm -f --cached PROJEKT/
  384  git status 
  385  nano .gitignore 
  386  git add .gitignore 
  387  git status 
  388  git commit -m "remove Projekt from repo list"
  389  git push origin hello
  390  exit () je suis un con
  391  ()
  392  exit() pas
  393  exit && echo "je suis un con"
  394  git config init.defaultbranch "main"
  395  git config --list
  396  git config --global init.defaultbranch "main"
  397  in
  398  py
  399  echo "bye mr le con" && exit
  400  cd git_learning/
  401  ls 
  402  git brach
  403  git branch 
  404  git log --oneline 
  405  git revert HEAD 
  406  git revert HEAD -m "just a revert"
  407  git log --oneline 
  408  git reset --soft ead8ff4 
  409  git log --oneline 
  410  git status 
  411  git commit -am --amend --no-edit 
  412  git push origin hello
  413  git switch any
  414  ls 
  415  git switch master
  416  rm -h
  417  rm --help
  418  git rebase hello
  419  git status
  420  git rebase --continue 
  421  nano histry.txt 
  422  git add .
  423  git status
  424  git rebase --edit-todo 
  425  git status
  426  git log --oneline 
  427  git commit -a --amend --no-edit 
  428  ls -la
  429  git log --oneline 
  430  git rebase --continue 
  431  git status 
  432  git add .
  433  git rebase --continue 
  434  git status 
  435  git log --oneline 
  436  ls -la
  437  git switch hello
  438  ls -la
  439  git switch any
  440  ls -la
  441  git pull origin master
  442  git status 
  443  git reflog 
  444  git switch master
  445  git status 
  446  git pull origin master
  447  git status 
  448  nano jes.txt 
  449  git commit -a --amend --no-edit 
  450  git commit -a --no-edit  
  451  git status 
  452  ls -la
  453  git pull 
  454  gpg --full-generate-key
  455  gpg --list-secret-keys --keyid-format-long
  456  gpg --list-secret-keys --keyid-format=long
  457  git config --global user.sigingkey 22BBF24F88521BD2 
  458  git commit -S --no-edit 
  459  git commit -S --allow-empty -m "je suis un con"
  460  git config --list
  461  git log --show-signature 
  462  nano je.txt 
  463  git commit  -S -am "je suis un con"
  464  git config user.signigkey "22BBF24F88521BD2" 
  465  git commit  -S -am "je suis un con"
  466  git config --lis
  467  git config user.signingkey "22BBF24F88521BD2" 
  468  git --unset user-signigkey
  469  git config --unset user-signigkey
  470  git config --unset user.signigkey
  471  git commit  -S -am "je suis un con"
  472  git log --show-signature 
  473  git log --all
  474  git checkout -b hello
  475  git checkout hello
  476  git status 
  477  nano 
  478  git add .
  479  git status 
  480  git rm --cached PROJEKT/
  481  nano .gitignore
  482  git status 
  483  git add .
  484  git status 
  485  git restore --staged PROJEKT/
  486  git status 
  487  git commit --amend --no-edit 
  488  git status 
  489  git switch master
  490  git merge hello
  491  git status 
  492  git add -
  493  git add .
  494  git commit -m "add -gitignore"
  495  git status
  496  git log --oneline 
  497  git checkout firs
  498  nano files.py 
  499  py ./files.py 
  500  exit
  501  git checkout master
  502  git nstatus
  503  git status
  504  git push origin master
  505  save
  506  nano bash
  507  bash files.py 
  508  bash je.txt 
  509  nano files.py 
  510  git log --oneline 
  511  history > history.txt
